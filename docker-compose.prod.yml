version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - ecoinsight_network

  timescaledb:
    image: timescale/timescaledb:latest-pg16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${TS_DB}
      POSTGRES_USER: ${TS_USER}
      POSTGRES_PASSWORD: ${TS_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - timescaledb_data:/var/lib/postgresql/data
    networks:
      - ecoinsight_network

  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ecoinsight_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ecoinsight-backend:prod
    restart: unless-stopped
    ports:
      - "3001:3001"
    env_file:
      - ./backend/.env.production
    depends_on:
      - mongodb
      - timescaledb
      - redis
    networks:
      - ecoinsight_network

volumes:
  mongodb_data:
  timescaledb_data:
  redis_data:

networks:
  ecoinsight_network:
    driver: bridge


